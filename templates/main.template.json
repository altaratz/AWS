{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Provides nesting for required stacks to deploy a full sample VPC, Bastion, Subnets, Logging, and other resources ",
    "Metadata": {
        "Stack": {
            "Value": 0
        },
        "VersionDate": {
            "Value": 20160518
        },
        "Identifier": {
            "Value": "main"
        },
        "Input": {
            "Description": "Input of all required parameters in nested stacks"
        },
        "Output": {
            "Description": "N/A"
        },
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Please provide the following parameter values:"
                    },
                    "Parameters": [
                        "pNotifyEmail",
                        "pEC2KeyPairBastion",
                        "pEC2KeyPair",
                        "pSupportsConfig",
                        "pAvailabilityZones"
                    ]
                },
                {
                    "Label": {
                        "default": "AWS Quick Start Configuration"
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix"
                    ]
                }
            ],
            "ParameterLabels": {
                "pNotifyEmail": {
                    "default": "Notification Email Address"
                },
                "pEC2KeyPairBastion": {
                    "default": "Existing SSH Key for the Bastion Instance"
                },
                "pEC2KeyPair": {
                    "default": "Existing SSH Key for Other Instances"
                },
                "pSupportsConfig": {
                    "default": "Support Config"
                },
                "pAvailabilityZones": {
                    "default": "Availability Zones"
                },
                "pVPCTenancy": {
                    "default": "Instance tenancy"
                },
                "QSS3BucketName": {
                    "default": "Quick Start S3 Bucket Name"
                },
                "QSS3KeyPrefix": {
                    "default": "Quick Start S3 Key Prefix"
                }
            }
        }
    },
    "Parameters": {
        "pNotifyEmail": {
            "Description": "Notification email address for security events (you will receive a confirmation email)",
            "Type": "String",
            "Default": "devops@kinecosystem.com"
        },
        "pEC2KeyPairBastion": {
            "Description": "The SSH key pair in your account to use for the bastion host login",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "pEC2KeyPair": {
            "Description": "The SSH key pair in your account to use for all other EC2 instance logins",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "pSupportsConfig": {
            "Description": "Is AWS Config Rules already configured for this region? Use ''false'' if you are uncertain. See AWS Config Management Console or Deployment Guide for details.",
            "AllowedValues": [
                "true",
                "false"
            ],
            "Default": "true",
            "Type": "String"
        },
        "pAvailabilityZones": {
            "Description": "Availability Zones",
            "Type": "List<AWS::EC2::AvailabilityZone::Name>"
        },
        "pVPCTenancy": {
            "Description": "Instance tenancy behavior for this VPC",
            "Type": "String",
            "Default": "default",
            "AllowedValues": [
                "default",
                "dedicated"
            ]
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-.]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, periods (.), and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "aws-quickstart",
            "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-/]*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Default": "quickstart-compliance-nist/",
            "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Type": "String"
        }
    },
    "Mappings": {
        "CustomVariables": {
            "vResourceEnvironmentTagKey": {
                "Value": "Environment"
            },
            "vResourceEnvironmentTagValue": {
                "Value": "development"
            }
        },
        "RegionServiceSupport": {
            "ap-northeast-1": {
                "ConfigRules": "true",
                "NatGateway": "true",
                "Glacier": "true"
            },
            "ap-northeast-2": {
                "ConfigRules": "true",
                "NatGateway": "true",
                "Glacier": "true"
            },
            "ap-south-1": {
                "ConfigRules": "true",
                "NatGateway": "true",
                "Glacier": "true"
            },
            "ap-southeast-1": {
                "ConfigRules": "true",
                "NatGateway": "true",
                "Glacier": "true"
            },
            "ap-southeast-2": {
                "ConfigRules": "true",
                "NatGateway": "true",
                "Glacier": "true"
            },
            "ca-central-1": {
                "ConfigRules": "true",
                "NatGateway": "true",
                "Glacier": "true"
            },
            "eu-central-1": {
                "NatGateway": "true",
                "ConfigRules": "true",
                "Glacier": "true"
            },
            "eu-west-1": {
                "ConfigRules": "true",
                "NatGateway": "true",
                "Glacier": "true"
            },
            "eu-west-2": {
                "ConfigRules": "true",
                "NatGateway": "true",
                "Glacier": "true"
            },
            "sa-east-1": {
                "ConfigRules": "true",
                "NatGateway": "true",
                "Glacier": "false"
            },
            "us-east-1": {
                "ConfigRules": "true",
                "NatGateway": "true",
                "Glacier": "true"
            },
            "us-east-2": {
                "ConfigRules": "true",
                "NatGateway": "true",
                "Glacier": "true"
            },
            "us-gov-west-1": {
                "ConfigRules": "true",
                "NatGateway": "true",
                "Glacier": "true"
            },
            "us-west-1": {
                "ConfigRules": "true",
                "NatGateway": "true",
                "Glacier": "true"
            },
            "us-west-2": {
                "ConfigRules": "true",
                "NatGateway": "true",
                "Glacier": "true"
            }
        },
        "AWSAMIRegionMap": {
            "AMI": {
                "AMZNLINUXHVM": "amzn-ami-hvm-2018.03.0.20181129-x86_64-gp2"
            },
            "ap-northeast-1": {
                "AMZNLINUXHVM": "ami-00a5245b4816c38e6",
                "InstanceType": "m4.large",
                "InstanceTypeDatabase": "db.m4.large"
            },
            "ap-northeast-2": {
                "AMZNLINUXHVM": "ami-00dc207f8ba6dc919",
                "InstanceType": "m4.large",
                "InstanceTypeDatabase": "db.m4.large"
            },
            "ap-south-1": {
                "AMZNLINUXHVM": "ami-0ad42f4f66f6c1cc9",
                "InstanceType": "m4.large",
                "InstanceTypeDatabase": "db.m4.large"
            },
            "ap-southeast-1": {
                "AMZNLINUXHVM": "ami-05b3bcf7f311194b3",
                "InstanceType": "m4.large",
                "InstanceTypeDatabase": "db.m4.large"
            },
            "ap-southeast-2": {
                "AMZNLINUXHVM": "ami-02fd0b06f06d93dfc",
                "InstanceType": "m4.large",
                "InstanceTypeDatabase": "db.m4.large"
            },
            "ca-central-1": {
                "AMZNLINUXHVM": "ami-07423fb63ea0a0930",
                "InstanceType": "m4.large",
                "InstanceTypeDatabase": "db.m4.large"
            },
            "eu-central-1": {
                "AMZNLINUXHVM": "ami-0cfbf4f6db41068ac",
                "InstanceType": "m4.large",
                "InstanceTypeDatabase": "db.m4.large"
            },
            "eu-west-1": {
                "AMZNLINUXHVM": "ami-08935252a36e25f85",
                "InstanceType": "m4.large",
                "InstanceTypeDatabase": "db.m4.large"
            },
            "eu-west-2": {
                "AMZNLINUXHVM": "ami-01419b804382064e4",
                "InstanceType": "m4.large",
                "InstanceTypeDatabase": "db.m4.large"
            },
            "sa-east-1": {
                "AMZNLINUXHVM": "ami-05145e0b28ad8e0b2",
                "InstanceType": "m4.large",
                "InstanceTypeDatabase": "db.m3.large"
            },
            "us-east-1": {
                "AMZNLINUXHVM": "ami-0080e4c5bc078760e",
                "InstanceType": "m4.large",
                "InstanceTypeDatabase": "db.m4.large"
            },
            "us-east-2": {
                "AMZNLINUXHVM": "ami-0cd3dfa4e37921605",
                "InstanceType": "m4.large",
                "InstanceTypeDatabase": "db.m4.large"
            },
            "us-gov-west-1": {
                "AMZNLINUXHVM": "ami-ffa61d9e",
                "InstanceType": "m4.large",
                "InstanceTypeDatabase": "db.m3.large"
            },
            "us-west-1": {
                "AMZNLINUXHVM": "ami-0ec6517f6edbf8044",
                "InstanceType": "m4.large",
                "InstanceTypeDatabase": "db.m4.large"
            },
            "us-west-2": {
                "AMZNLINUXHVM": "ami-01e24be29428c15b2",
                "InstanceType": "m4.large",
                "InstanceTypeDatabase": "db.m4.large"
            }
        }
    },
    "Conditions": {
        "GovCloudCondition": {
            "Fn::Equals": [
                {
                    "Ref": "AWS::Region"
                },
                "us-gov-west-1"
            ]
        },
        "LoadConfigRulesTemplate": {
            "Fn::Equals": [
                {
                    "Ref": "pSupportsConfig"
                },
                "true"
            ]
        },
        "LaunchAsDedicatedInstance": {
            "Fn::Equals": [
                {
                    "Ref": "pVPCTenancy"
                },
                "dedicated"
            ]
        }
    },
    "Resources": {
        "IamTemplate": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": [
                        "https://github.com/kinecosystem/aws-best-practice-CF/tree/master/templates/iam.template.json",
                        {
                            "QSS3Region": {
                                "Fn::If": [
                                    "GovCloudCondition",
                                    "s3-us-gov-west-1",
                                    "s3"
                                ]
                            }
                        }
                    ]
                },
                "TimeoutInMinutes": 20
            }
        },
        "LoggingTemplate": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": [
                        "https://github.com/kinecosystem/aws-best-practice-CF/tree/master/templates/logging.template.json",
                        {
                            "QSS3Region": {
                                "Fn::If": [
                                    "GovCloudCondition",
                                    "s3-us-gov-west-1",
                                    "s3"
                                ]
                            }
                        }
                    ]
                },
                "TimeoutInMinutes": 20,
                "Parameters": {
                    "pNotifyEmail": {
                        "Ref": "pNotifyEmail"
                    },
                    "pSupportsGlacier": {
                        "Fn::FindInMap": [
                            "RegionServiceSupport",
                            {
                                "Ref": "AWS::Region"
                            },
                            "Glacier"
                        ]
                    }
                }
            }
        },
        "ProductionVpcTemplate": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": [
                        "https://github.com/kinecosystem/aws-best-practice-CF/tree/master/templates/vpc-production.template.json",
                        {
                            "QSS3Region": {
                                "Fn::If": [
                                    "GovCloudCondition",
                                    "s3-us-gov-west-1",
                                    "s3"
                                ]
                            }
                        }
                    ]
                },
                "TimeoutInMinutes": 20,
                "Parameters": {
                    "pRegionAZ1Name": {
                        "Fn::Select": [
                            0,
                            {
                                "Ref": "pAvailabilityZones"
                            }
                        ]
                    },
                    "pRegionAZ2Name": {
                        "Fn::Select": [
                            1,
                            {
                                "Ref": "pAvailabilityZones"
                            }
                        ]
                    },
                    "pProductionVPCName": "Production VPC",
                    "pBastionSSHCIDR": "0.0.0.0/0",
                    "pDMZSubnetACIDR": "10.100.10.0/24",
                    "pDMZSubnetBCIDR": "10.100.20.0/24",
                    "pManagementCIDR": "10.10.0.0/16",
                    "pAppPrivateSubnetACIDR": "10.100.96.0/21",
                    "pAppPrivateSubnetBCIDR": "10.100.119.0/21",
                    "pDBPrivateSubnetACIDR": "10.100.194.0/21",
                    "pDBPrivateSubnetBCIDR": "10.100.212.0/21",
                    "pVPCTenancy": {
                        "Ref": "pVPCTenancy"
                    },
                    "pEnvironment": {
                        "Fn::FindInMap": [
                            "CustomVariables",
                            "vResourceEnvironmentTagValue",
                            "Value"
                        ]
                    },
                    "pEC2KeyPair": {
                        "Ref": "pEC2KeyPair"
                    },
                    "pSupportsNatGateway": {
                        "Fn::FindInMap": [
                            "RegionServiceSupport",
                            {
                                "Ref": "AWS::Region"
                            },
                            "NatGateway"
                        ]
                    },
                    "pNatAmi": {
                        "Fn::FindInMap": [
                            "AWSAMIRegionMap",
                            {
                                "Ref": "AWS::Region"
                            },
                            "AMZNLINUXHVM"
                        ]
                    },
                    "pNatInstanceType": {
                        "Fn::FindInMap": [
                            "AWSAMIRegionMap",
                            {
                                "Ref": "AWS::Region"
                            },
                            "InstanceType"
                        ]
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Fn::Sub": "${QSS3KeyPrefix}submodules/quickstart-compliance-common/"
                    }
                }
            }
        },
        "ManagementVpcTemplate": {
            "Type": "AWS::CloudFormation::Stack",
            "DependsOn": "ProductionVpcTemplate",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": [
                        "https://github.com/kinecosystem/aws-best-practice-CF/tree/master/templates/vpc-management.template.json",
                        {
                            "QSS3Region": {
                                "Fn::If": [
                                    "GovCloudCondition",
                                    "s3-us-gov-west-1",
                                    "s3"
                                ]
                            }
                        }
                    ]
                },
                "TimeoutInMinutes": 20,
                "Parameters": {
                    "pProductionVPC": {
                        "Fn::GetAtt": [
                            "ProductionVpcTemplate",
                            "Outputs.rVPCProduction"
                        ]
                    },
                    "pRouteTableProdPrivateA": {
                        "Fn::GetAtt": [
                            "ProductionVpcTemplate",
                            "Outputs.rRouteTableProdPrivateA"
                        ]
                    },
                     "pRouteTableProdPrivateB": {
                        "Fn::GetAtt": [
                            "ProductionVpcTemplate",
                            "Outputs.rRouteTableProdPrivateB"
                        ]
                    },
                    "pRouteTableProdPublic": {
                        "Fn::GetAtt": [
                            "ProductionVpcTemplate",
                            "Outputs.rRouteTableProdPublic"
                        ]
                    },
                    "pProductionCIDR": "10.100.0.0/16",
                    "pBastionSSHCIDR": "0.0.0.0/0",
                    "pManagementCIDR": "10.10.0.0/16",
                    "pManagementDMZSubnetACIDR": "10.10.1.0/24",
                    "pManagementDMZSubnetBCIDR": "10.10.2.0/24",
                    "pManagementPrivateSubnetACIDR": "10.10.20.0/24",
                    "pManagementPrivateSubnetBCIDR": "10.10.30.0/24",
                    "pManagementVPCName": "Management VPC",
                    "pEC2KeyPairBastion": {
                        "Ref": "pEC2KeyPairBastion"
                    },
                    "pEC2KeyPair": {
                        "Ref": "pEC2KeyPair"
                    },
                    "pVPCTenancy": {
                        "Ref": "pVPCTenancy"
                    },
                    "pBastionAmi": {
                        "Fn::FindInMap": [
                            "AWSAMIRegionMap",
                            {
                                "Ref": "AWS::Region"
                            },
                            "AMZNLINUXHVM"
                        ]
                    },
                    "pRegionAZ1Name": {
                        "Fn::Select": [
                            0,
                            {
                                "Ref": "pAvailabilityZones"
                            }
                        ]
                    },
                    "pRegionAZ2Name": {
                        "Fn::Select": [
                            1,
                            {
                                "Ref": "pAvailabilityZones"
                            }
                        ]
                    },
                    "pEnvironment": {
                        "Fn::FindInMap": [
                            "CustomVariables",
                            "vResourceEnvironmentTagValue",
                            "Value"
                        ]
                    },
                    "pBastionInstanceType": {
                        "Fn::If": [
                            "LaunchAsDedicatedInstance",
                            "m4.large",
                            "t2.small"
                        ]
                    },
                    "pSupportsNatGateway": {
                        "Fn::FindInMap": [
                            "RegionServiceSupport",
                            {
                                "Ref": "AWS::Region"
                            },
                            "NatGateway"
                        ]
                    },
                    "pNatAmi": {
                        "Fn::FindInMap": [
                            "AWSAMIRegionMap",
                            {
                                "Ref": "AWS::Region"
                            },
                            "AMZNLINUXHVM"
                        ]
                    },
                    "pNatInstanceType": {
                        "Fn::FindInMap": [
                            "AWSAMIRegionMap",
                            {
                                "Ref": "AWS::Region"
                            },
                            "InstanceType"
                        ]
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Fn::Sub": "${QSS3KeyPrefix}submodules/quickstart-compliance-common/"
                    }
                }
            }
        },
        "ConfigRulesTemplate": {
            "Type": "AWS::CloudFormation::Stack",
            "Condition": "LoadConfigRulesTemplate",
            "DependsOn": [
                "IamTemplate",
                "ProductionVpcTemplate",
                "ManagementVpcTemplate",
                "LoggingTemplate"
            ],
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": [
                        "https://github.com/kinecosystem/aws-best-practice-CF/tree/master/templates/config-rules.template.json",
                        {
                            "QSS3Region": {
                                "Fn::If": [
                                    "GovCloudCondition",
                                    "s3-us-gov-west-1",
                                    "s3"
                                ]
                            }
                        }
                    ]
                },
                "TimeoutInMinutes": 20,
                "Parameters": {
                    "pRequiredTagKey": {
                        "Fn::FindInMap": [
                            "CustomVariables",
                            "vResourceEnvironmentTagKey",
                            "Value"
                        ]
                    }
                }
            }
        },
        "ApplicationTemplate": {
            "Type": "AWS::CloudFormation::Stack",
            "DependsOn": "ProductionVpcTemplate",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": [
                        "https://github.com/kinecosystem/aws-best-practice-CF/tree/master/templates/application.template.json",
                        {
                            "QSS3Region": {
                                "Fn::If": [
                                    "GovCloudCondition",
                                    "s3-us-gov-west-1",
                                    "s3"
                                ]
                            }
                        }
                    ]
                },
                "TimeoutInMinutes": 30,
                "Parameters": {
                    "pSecurityAlarmTopic": {
                        "Fn::GetAtt": [
                            "LoggingTemplate",
                            "Outputs.rSecurityAlarmTopic"
                        ]
                    },
                    "pEC2KeyPair": {
                        "Ref": "pEC2KeyPair"
                    },
                    "pProductionCIDR": "10.100.0.0/16",
                    "pProductionVPC": {
                        "Fn::GetAtt": [
                            "ProductionVpcTemplate",
                            "Outputs.rVPCProduction"
                        ]
                    },
                    "pDMZSubnetA": {
                        "Fn::GetAtt": [
                            "ProductionVpcTemplate",
                            "Outputs.rDMZSubnetA"
                        ]
                    },
                    "pDMZSubnetB": {
                        "Fn::GetAtt": [
                            "ProductionVpcTemplate",
                            "Outputs.rDMZSubnetB"
                        ]
                    },
                    "pAppPrivateSubnetA": {
                        "Fn::GetAtt": [
                            "ProductionVpcTemplate",
                            "Outputs.rAppPrivateSubnetA"
                        ]
                    },
                    "pAppPrivateSubnetB": {
                        "Fn::GetAtt": [
                            "ProductionVpcTemplate",
                            "Outputs.rAppPrivateSubnetB"
                        ]
                    },
                    "pDBPrivateSubnetA": {
                        "Fn::GetAtt": [
                            "ProductionVpcTemplate",
                            "Outputs.rDBPrivateSubnetA"
                        ]
                    },
                    "pDBPrivateSubnetB": {
                        "Fn::GetAtt": [
                            "ProductionVpcTemplate",
                            "Outputs.rDBPrivateSubnetB"
                        ]
                    },
                    "pManagementCIDR": "10.10.0.0/16",
                    "pRegionAZ1Name": {
                        "Fn::Select": [
                            0,
                            {
                                "Ref": "pAvailabilityZones"
                            }
                        ]
                    },
                    "pRegionAZ2Name": {
                        "Fn::Select": [
                            1,
                            {
                                "Ref": "pAvailabilityZones"
                            }
                        ]
                    },
                    "pEnvironment": {
                        "Fn::FindInMap": [
                            "CustomVariables",
                            "vResourceEnvironmentTagValue",
                            "Value"
                        ]
                    },
                    "pBastionSSHCIDR": "0.0.0.0/0",
                    "pSupportsGlacier": {
                        "Fn::FindInMap": [
                            "RegionServiceSupport",
                            {
                                "Ref": "AWS::Region"
                            },
                            "Glacier"
                        ]
                    }
                }
            }
        }
    },
    "Outputs": {
        "TemplateType": {
            "Value": "Standard Multi-Tier Web Application"
        },
        "TemplateVersion": {
            "Value": 2
        },
        "BastionIP": {
            "Description": "Use this IP via SSH to connect to Bastion Instance",
            "Value": {
                "Fn::GetAtt": [
                    "ManagementVpcTemplate",
                    "Outputs.rBastionInstanceIP"
                ]
            }
        },
        "Help": {
            "Description": "For assistance or questions regarding this quickstart please email compliance-accelerator@amazon.com",
            "Value": ""
        }
    }
}